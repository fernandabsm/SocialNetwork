#pragma once
#include <stdio.h>
#include <stdlib.h>

#ifndef SOCIALNETWORK_H
#define SOCIALNETWORK_H

typedef struct date {
	int day;
	int month;
	int year;
}TDate;

typedef struct user {
	char name[100];
	char email[200];
	char login[50];
	char password[50];
	TDate date_of_birth;
	int ID; // should be generated by the program and
	// equal the index of the registered element in the vector (list)
}TUser;

typedef struct socialNetwork {
	TUser vector[100];
	int matrix[100][100]; // matrix of friendship
	int index; // indicates the position where the next element will be inserted in the list and
	// also informes how much users are registered in the list 
	int mutual_friends[100][100];
	int no_mutual_friends[2];
}TSocialNetwork;


void Read(TUser* user); /* procedure that read the data of a user */
void Print(TUser user); /* procedure that print the data of a user */
void Initialize(TSocialNetwork* network); /* procedure that initialize the social network and make the index receive 0 
                                                 and the positions in the matrix of friendship receive 0*/
void Register(TSocialNetwork* network, TUser user); /* procedure that register a new user in the social network */
void Print_2(TSocialNetwork network); /* procedure that print all users in social network */
int Search(TSocialNetwork network, TUser user); /* function that search for a user in social network through your name */
void Change(TSocialNetwork* network, TUser user, int id); /* procedure that change the data of a user */
void Delete(TSocialNetwork* network, int id); /* procedure that delete a user from the social network 
											  and make his id 0 and his friendship list positions 0 */

#endif // !SOCIALNETWORK_H